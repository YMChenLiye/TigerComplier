Terminals unused in grammar

   UMINUS


State 47 conflicts: 1 shift/reduce
State 67 conflicts: 1 shift/reduce
State 68 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 exp: INT
    3    | STRING
    4    | LValue
    5    | NIL
    6    | exp exps
    7    | MINUS INT
    8    | MINUS ID
    9    | LPAREN exp RPAREN
   10    | LPAREN RPAREN
   11    | FunctionCall
   12    | Arithmetic
   13    | Comparison
   14    | exp AND exp
   15    | exp OR exp
   16    | RecordCreation
   17    | ArrayCreation
   18    | LValue ASSIGN exp
   19    | IF exp THEN exp ELSE exp
   20    | IF exp THEN exp
   21    | WHILE exp DO exp
   22    | FOR ID ASSIGN exp TO exp DO exp
   23    | BREAK
   24    | LET DeclarationSequence IN exp END

   25 exps: SEMICOLON exp
   26     | exps SEMICOLON exp

   27 DeclarationSequence: %empty
   28                    | DeclarationSequence Declaration

   29 Declaration: TypeDeclarations
   30            | VarDeclaration
   31            | FunctionDeclarations

   32 TypeDeclarations: TypeDeclaration
   33                 | TypeDeclarations TypeDeclaration

   34 FunctionDeclarations: FunctionDeclaration
   35                     | FunctionDeclarations FunctionDeclaration

   36 TypeDeclaration: TYPE ID EQ OtherType

   37 OtherType: ID
   38          | LBRACE TypeFields RBRACE
   39          | ARRAY OF ID

   40 TypeFields: %empty
   41           | TypeKV TypeKVList

   42 TypeKV: ID COLON ID

   43 TypeKVList: %empty
   44           | TypeKVList COMMA TypeKV

   45 VarDeclaration: VAR ID ASSIGN exp
   46               | VAR ID COLON ID ASSIGN exp

   47 FunctionDeclaration: FUNCTION ID LPAREN TypeFields RPAREN EQ exp
   48                    | FUNCTION ID LPAREN TypeFields RPAREN COLON ID EQ exp

   49 LValue: ID LValue_extension

   50 LValue_extension: %empty
   51                 | DOT ID LValue_extension
   52                 | LBRACK exp RBRACK LValue_extension

   53 FunctionCall: ID LPAREN RPAREN
   54             | ID LPAREN expList RPAREN

   55 expList: exp
   56        | expList COMMA exp

   57 Arithmetic: exp PLUS exp
   58           | exp MINUS exp
   59           | exp TIMES exp
   60           | exp DIVIDE exp

   61 Comparison: exp EQ exp
   62           | exp NEQ exp
   63           | exp LT exp
   64           | exp LE exp
   65           | exp GT exp
   66           | exp GE exp

   67 RecordCreation: ID LBRACE RBRACE
   68               | ID LBRACE FieldAssignmentList RBRACE

   69 FieldAssignmentList: FieldAssignment
   70                    | FieldAssignmentList COMMA FieldAssignment

   71 FieldAssignment: ID EQ exp

   72 ArrayCreation: ID LBRACK exp RBRACK OF exp


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 8 22 36 37 39 42 45 46 47 48 49 51 53 54 67 68 71 72
STRING (259) 3
INT (260) 2 7
COMMA (261) 44 56 70
COLON (262) 42 46 48
SEMICOLON (263) 25 26
LPAREN (264) 9 10 47 48 53 54
RPAREN (265) 9 10 47 48 53 54
LBRACK (266) 52 72
RBRACK (267) 52 72
LBRACE (268) 38 67 68
RBRACE (269) 38 67 68
DOT (270) 51
PLUS (271) 57
MINUS (272) 7 8 58
TIMES (273) 59
DIVIDE (274) 60
EQ (275) 36 47 48 61 71
NEQ (276) 62
LT (277) 63
LE (278) 64
GT (279) 65
GE (280) 66
AND (281) 14
OR (282) 15
ASSIGN (283) 18 22 45 46
ARRAY (284) 39
IF (285) 19 20
THEN (286) 19 20
ELSE (287) 19
WHILE (288) 21
FOR (289) 22
TO (290) 22
DO (291) 21 22
LET (292) 24
IN (293) 24
END (294) 24
OF (295) 39 72
BREAK (296) 23
NIL (297) 5
FUNCTION (298) 47 48
VAR (299) 45 46
TYPE (300) 36
UMINUS (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
exp (49)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
    23 24, on right: 1 6 9 14 15 18 19 20 21 22 24 25 26 45 46 47 48
    52 55 56 57 58 59 60 61 62 63 64 65 66 71 72
exps (50)
    on left: 25 26, on right: 6 26
DeclarationSequence (51)
    on left: 27 28, on right: 24 28
Declaration (52)
    on left: 29 30 31, on right: 28
TypeDeclarations (53)
    on left: 32 33, on right: 29 33
FunctionDeclarations (54)
    on left: 34 35, on right: 31 35
TypeDeclaration (55)
    on left: 36, on right: 32 33
OtherType (56)
    on left: 37 38 39, on right: 36
TypeFields (57)
    on left: 40 41, on right: 38 47 48
TypeKV (58)
    on left: 42, on right: 41 44
TypeKVList (59)
    on left: 43 44, on right: 41 44
VarDeclaration (60)
    on left: 45 46, on right: 30
FunctionDeclaration (61)
    on left: 47 48, on right: 34 35
LValue (62)
    on left: 49, on right: 4 18
LValue_extension (63)
    on left: 50 51 52, on right: 49 51 52
FunctionCall (64)
    on left: 53 54, on right: 11
expList (65)
    on left: 55 56, on right: 54 56
Arithmetic (66)
    on left: 57 58 59 60, on right: 12
Comparison (67)
    on left: 61 62 63 64 65 66, on right: 13
RecordCreation (68)
    on left: 67 68, on right: 16
FieldAssignmentList (69)
    on left: 69 70, on right: 68 70
FieldAssignment (70)
    on left: 71, on right: 69 70
ArrayCreation (71)
    on left: 72, on right: 17


State 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    program         go to state 12
    exp             go to state 13
    LValue          go to state 14
    FunctionCall    go to state 15
    Arithmetic      go to state 16
    Comparison      go to state 17
    RecordCreation  go to state 18
    ArrayCreation   go to state 19


State 1

   49 LValue: ID . LValue_extension
   53 FunctionCall: ID . LPAREN RPAREN
   54             | ID . LPAREN expList RPAREN
   67 RecordCreation: ID . LBRACE RBRACE
   68               | ID . LBRACE FieldAssignmentList RBRACE
   72 ArrayCreation: ID . LBRACK exp RBRACK OF exp

    LPAREN  shift, and go to state 20
    LBRACK  shift, and go to state 21
    LBRACE  shift, and go to state 22
    DOT     shift, and go to state 23

    $default  reduce using rule 50 (LValue_extension)

    LValue_extension  go to state 24


State 2

    3 exp: STRING .

    $default  reduce using rule 3 (exp)


State 3

    2 exp: INT .

    $default  reduce using rule 2 (exp)


State 4

    9 exp: LPAREN . exp RPAREN
   10    | LPAREN . RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    RPAREN  shift, and go to state 25
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 26
    LValue          go to state 14
    FunctionCall    go to state 15
    Arithmetic      go to state 16
    Comparison      go to state 17
    RecordCreation  go to state 18
    ArrayCreation   go to state 19


State 5

    7 exp: MINUS . INT
    8    | MINUS . ID

    ID   shift, and go to state 27
    INT  shift, and go to state 28


State 6

   19 exp: IF . exp THEN exp ELSE exp
   20    | IF . exp THEN exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 29
    LValue          go to state 14
    FunctionCall    go to state 15
    Arithmetic      go to state 16
    Comparison      go to state 17
    RecordCreation  go to state 18
    ArrayCreation   go to state 19


State 7

   21 exp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 30
    LValue          go to state 14
    FunctionCall    go to state 15
    Arithmetic      go to state 16
    Comparison      go to state 17
    RecordCreation  go to state 18
    ArrayCreation   go to state 19


State 8

   22 exp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 31


State 9

   24 exp: LET . DeclarationSequence IN exp END

    $default  reduce using rule 27 (DeclarationSequence)

    DeclarationSequence  go to state 32


State 10

   23 exp: BREAK .

    $default  reduce using rule 23 (exp)


State 11

    5 exp: NIL .

    $default  reduce using rule 5 (exp)


State 12

    0 $accept: program . $end

    $end  shift, and go to state 33


State 13

    1 program: exp .
    6 exp: exp . exps
   14    | exp . AND exp
   15    | exp . OR exp
   57 Arithmetic: exp . PLUS exp
   58           | exp . MINUS exp
   59           | exp . TIMES exp
   60           | exp . DIVIDE exp
   61 Comparison: exp . EQ exp
   62           | exp . NEQ exp
   63           | exp . LT exp
   64           | exp . LE exp
   65           | exp . GT exp
   66           | exp . GE exp

    SEMICOLON  shift, and go to state 34
    PLUS       shift, and go to state 35
    MINUS      shift, and go to state 36
    TIMES      shift, and go to state 37
    DIVIDE     shift, and go to state 38
    EQ         shift, and go to state 39
    NEQ        shift, and go to state 40
    LT         shift, and go to state 41
    LE         shift, and go to state 42
    GT         shift, and go to state 43
    GE         shift, and go to state 44
    AND        shift, and go to state 45
    OR         shift, and go to state 46

    $default  reduce using rule 1 (program)

    exps  go to state 47


State 14

    4 exp: LValue .
   18    | LValue . ASSIGN exp

    ASSIGN  shift, and go to state 48

    $default  reduce using rule 4 (exp)


State 15

   11 exp: FunctionCall .

    $default  reduce using rule 11 (exp)


State 16

   12 exp: Arithmetic .

    $default  reduce using rule 12 (exp)


State 17

   13 exp: Comparison .

    $default  reduce using rule 13 (exp)


State 18

   16 exp: RecordCreation .

    $default  reduce using rule 16 (exp)


State 19

   17 exp: ArrayCreation .

    $default  reduce using rule 17 (exp)


State 20

   53 FunctionCall: ID LPAREN . RPAREN
   54             | ID LPAREN . expList RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    RPAREN  shift, and go to state 49
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 50
    LValue          go to state 14
    FunctionCall    go to state 15
    expList         go to state 51
    Arithmetic      go to state 16
    Comparison      go to state 17
    RecordCreation  go to state 18
    ArrayCreation   go to state 19


State 21

   52 LValue_extension: LBRACK . exp RBRACK LValue_extension
   72 ArrayCreation: ID LBRACK . exp RBRACK OF exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 52
    LValue          go to state 14
    FunctionCall    go to state 15
    Arithmetic      go to state 16
    Comparison      go to state 17
    RecordCreation  go to state 18
    ArrayCreation   go to state 19


State 22

   67 RecordCreation: ID LBRACE . RBRACE
   68               | ID LBRACE . FieldAssignmentList RBRACE

    ID      shift, and go to state 53
    RBRACE  shift, and go to state 54

    FieldAssignmentList  go to state 55
    FieldAssignment      go to state 56


State 23

   51 LValue_extension: DOT . ID LValue_extension

    ID  shift, and go to state 57


State 24

   49 LValue: ID LValue_extension .

    $default  reduce using rule 49 (LValue)


State 25

   10 exp: LPAREN RPAREN .

    $default  reduce using rule 10 (exp)


State 26

    6 exp: exp . exps
    9    | LPAREN exp . RPAREN
   14    | exp . AND exp
   15    | exp . OR exp
   57 Arithmetic: exp . PLUS exp
   58           | exp . MINUS exp
   59           | exp . TIMES exp
   60           | exp . DIVIDE exp
   61 Comparison: exp . EQ exp
   62           | exp . NEQ exp
   63           | exp . LT exp
   64           | exp . LE exp
   65           | exp . GT exp
   66           | exp . GE exp

    SEMICOLON  shift, and go to state 34
    RPAREN     shift, and go to state 58
    PLUS       shift, and go to state 35
    MINUS      shift, and go to state 36
    TIMES      shift, and go to state 37
    DIVIDE     shift, and go to state 38
    EQ         shift, and go to state 39
    NEQ        shift, and go to state 40
    LT         shift, and go to state 41
    LE         shift, and go to state 42
    GT         shift, and go to state 43
    GE         shift, and go to state 44
    AND        shift, and go to state 45
    OR         shift, and go to state 46

    exps  go to state 47


State 27

    8 exp: MINUS ID .

    $default  reduce using rule 8 (exp)


State 28

    7 exp: MINUS INT .

    $default  reduce using rule 7 (exp)


State 29

    6 exp: exp . exps
   14    | exp . AND exp
   15    | exp . OR exp
   19    | IF exp . THEN exp ELSE exp
   20    | IF exp . THEN exp
   57 Arithmetic: exp . PLUS exp
   58           | exp . MINUS exp
   59           | exp . TIMES exp
   60           | exp . DIVIDE exp
   61 Comparison: exp . EQ exp
   62           | exp . NEQ exp
   63           | exp . LT exp
   64           | exp . LE exp
   65           | exp . GT exp
   66           | exp . GE exp

    SEMICOLON  shift, and go to state 34
    PLUS       shift, and go to state 35
    MINUS      shift, and go to state 36
    TIMES      shift, and go to state 37
    DIVIDE     shift, and go to state 38
    EQ         shift, and go to state 39
    NEQ        shift, and go to state 40
    LT         shift, and go to state 41
    LE         shift, and go to state 42
    GT         shift, and go to state 43
    GE         shift, and go to state 44
    AND        shift, and go to state 45
    OR         shift, and go to state 46
    THEN       shift, and go to state 59

    exps  go to state 47


State 30

    6 exp: exp . exps
   14    | exp . AND exp
   15    | exp . OR exp
   21    | WHILE exp . DO exp
   57 Arithmetic: exp . PLUS exp
   58           | exp . MINUS exp
   59           | exp . TIMES exp
   60           | exp . DIVIDE exp
   61 Comparison: exp . EQ exp
   62           | exp . NEQ exp
   63           | exp . LT exp
   64           | exp . LE exp
   65           | exp . GT exp
   66           | exp . GE exp

    SEMICOLON  shift, and go to state 34
    PLUS       shift, and go to state 35
    MINUS      shift, and go to state 36
    TIMES      shift, and go to state 37
    DIVIDE     shift, and go to state 38
    EQ         shift, and go to state 39
    NEQ        shift, and go to state 40
    LT         shift, and go to state 41
    LE         shift, and go to state 42
    GT         shift, and go to state 43
    GE         shift, and go to state 44
    AND        shift, and go to state 45
    OR         shift, and go to state 46
    DO         shift, and go to state 60

    exps  go to state 47


State 31

   22 exp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 61


State 32

   24 exp: LET DeclarationSequence . IN exp END
   28 DeclarationSequence: DeclarationSequence . Declaration

    IN        shift, and go to state 62
    FUNCTION  shift, and go to state 63
    VAR       shift, and go to state 64
    TYPE      shift, and go to state 65

    Declaration           go to state 66
    TypeDeclarations      go to state 67
    FunctionDeclarations  go to state 68
    TypeDeclaration       go to state 69
    VarDeclaration        go to state 70
    FunctionDeclaration   go to state 71


State 33

    0 $accept: program $end .

    $default  accept


State 34

   25 exps: SEMICOLON . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 72
    LValue          go to state 14
    FunctionCall    go to state 15
    Arithmetic      go to state 16
    Comparison      go to state 17
    RecordCreation  go to state 18
    ArrayCreation   go to state 19


State 35

   57 Arithmetic: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 73
    LValue          go to state 14
    FunctionCall    go to state 15
    Arithmetic      go to state 16
    Comparison      go to state 17
    RecordCreation  go to state 18
    ArrayCreation   go to state 19


State 36

   58 Arithmetic: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 74
    LValue          go to state 14
    FunctionCall    go to state 15
    Arithmetic      go to state 16
    Comparison      go to state 17
    RecordCreation  go to state 18
    ArrayCreation   go to state 19


State 37

   59 Arithmetic: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 75
    LValue          go to state 14
    FunctionCall    go to state 15
    Arithmetic      go to state 16
    Comparison      go to state 17
    RecordCreation  go to state 18
    ArrayCreation   go to state 19


State 38

   60 Arithmetic: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 76
    LValue          go to state 14
    FunctionCall    go to state 15
    Arithmetic      go to state 16
    Comparison      go to state 17
    RecordCreation  go to state 18
    ArrayCreation   go to state 19


State 39

   61 Comparison: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 77
    LValue          go to state 14
    FunctionCall    go to state 15
    Arithmetic      go to state 16
    Comparison      go to state 17
    RecordCreation  go to state 18
    ArrayCreation   go to state 19


State 40

   62 Comparison: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 78
    LValue          go to state 14
    FunctionCall    go to state 15
    Arithmetic      go to state 16
    Comparison      go to state 17
    RecordCreation  go to state 18
    ArrayCreation   go to state 19


State 41

   63 Comparison: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 79
    LValue          go to state 14
    FunctionCall    go to state 15
    Arithmetic      go to state 16
    Comparison      go to state 17
    RecordCreation  go to state 18
    ArrayCreation   go to state 19


State 42

   64 Comparison: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 80
    LValue          go to state 14
    FunctionCall    go to state 15
    Arithmetic      go to state 16
    Comparison      go to state 17
    RecordCreation  go to state 18
    ArrayCreation   go to state 19


State 43

   65 Comparison: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 81
    LValue          go to state 14
    FunctionCall    go to state 15
    Arithmetic      go to state 16
    Comparison      go to state 17
    RecordCreation  go to state 18
    ArrayCreation   go to state 19


State 44

   66 Comparison: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 82
    LValue          go to state 14
    FunctionCall    go to state 15
    Arithmetic      go to state 16
    Comparison      go to state 17
    RecordCreation  go to state 18
    ArrayCreation   go to state 19


State 45

   14 exp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 83
    LValue          go to state 14
    FunctionCall    go to state 15
    Arithmetic      go to state 16
    Comparison      go to state 17
    RecordCreation  go to state 18
    ArrayCreation   go to state 19


State 46

   15 exp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 84
    LValue          go to state 14
    FunctionCall    go to state 15
    Arithmetic      go to state 16
    Comparison      go to state 17
    RecordCreation  go to state 18
    ArrayCreation   go to state 19


State 47

    6 exp: exp exps .
   26 exps: exps . SEMICOLON exp

    SEMICOLON  shift, and go to state 85

    SEMICOLON  [reduce using rule 6 (exp)]
    $default   reduce using rule 6 (exp)


State 48

   18 exp: LValue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 86
    LValue          go to state 14
    FunctionCall    go to state 15
    Arithmetic      go to state 16
    Comparison      go to state 17
    RecordCreation  go to state 18
    ArrayCreation   go to state 19


State 49

   53 FunctionCall: ID LPAREN RPAREN .

    $default  reduce using rule 53 (FunctionCall)


State 50

    6 exp: exp . exps
   14    | exp . AND exp
   15    | exp . OR exp
   55 expList: exp .
   57 Arithmetic: exp . PLUS exp
   58           | exp . MINUS exp
   59           | exp . TIMES exp
   60           | exp . DIVIDE exp
   61 Comparison: exp . EQ exp
   62           | exp . NEQ exp
   63           | exp . LT exp
   64           | exp . LE exp
   65           | exp . GT exp
   66           | exp . GE exp

    SEMICOLON  shift, and go to state 34
    PLUS       shift, and go to state 35
    MINUS      shift, and go to state 36
    TIMES      shift, and go to state 37
    DIVIDE     shift, and go to state 38
    EQ         shift, and go to state 39
    NEQ        shift, and go to state 40
    LT         shift, and go to state 41
    LE         shift, and go to state 42
    GT         shift, and go to state 43
    GE         shift, and go to state 44
    AND        shift, and go to state 45
    OR         shift, and go to state 46

    $default  reduce using rule 55 (expList)

    exps  go to state 47


State 51

   54 FunctionCall: ID LPAREN expList . RPAREN
   56 expList: expList . COMMA exp

    COMMA   shift, and go to state 87
    RPAREN  shift, and go to state 88


State 52

    6 exp: exp . exps
   14    | exp . AND exp
   15    | exp . OR exp
   52 LValue_extension: LBRACK exp . RBRACK LValue_extension
   57 Arithmetic: exp . PLUS exp
   58           | exp . MINUS exp
   59           | exp . TIMES exp
   60           | exp . DIVIDE exp
   61 Comparison: exp . EQ exp
   62           | exp . NEQ exp
   63           | exp . LT exp
   64           | exp . LE exp
   65           | exp . GT exp
   66           | exp . GE exp
   72 ArrayCreation: ID LBRACK exp . RBRACK OF exp

    SEMICOLON  shift, and go to state 34
    RBRACK     shift, and go to state 89
    PLUS       shift, and go to state 35
    MINUS      shift, and go to state 36
    TIMES      shift, and go to state 37
    DIVIDE     shift, and go to state 38
    EQ         shift, and go to state 39
    NEQ        shift, and go to state 40
    LT         shift, and go to state 41
    LE         shift, and go to state 42
    GT         shift, and go to state 43
    GE         shift, and go to state 44
    AND        shift, and go to state 45
    OR         shift, and go to state 46

    exps  go to state 47


State 53

   71 FieldAssignment: ID . EQ exp

    EQ  shift, and go to state 90


State 54

   67 RecordCreation: ID LBRACE RBRACE .

    $default  reduce using rule 67 (RecordCreation)


State 55

   68 RecordCreation: ID LBRACE FieldAssignmentList . RBRACE
   70 FieldAssignmentList: FieldAssignmentList . COMMA FieldAssignment

    COMMA   shift, and go to state 91
    RBRACE  shift, and go to state 92


State 56

   69 FieldAssignmentList: FieldAssignment .

    $default  reduce using rule 69 (FieldAssignmentList)


State 57

   51 LValue_extension: DOT ID . LValue_extension

    LBRACK  shift, and go to state 93
    DOT     shift, and go to state 23

    $default  reduce using rule 50 (LValue_extension)

    LValue_extension  go to state 94


State 58

    9 exp: LPAREN exp RPAREN .

    $default  reduce using rule 9 (exp)


State 59

   19 exp: IF exp THEN . exp ELSE exp
   20    | IF exp THEN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 95
    LValue          go to state 14
    FunctionCall    go to state 15
    Arithmetic      go to state 16
    Comparison      go to state 17
    RecordCreation  go to state 18
    ArrayCreation   go to state 19


State 60

   21 exp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 96
    LValue          go to state 14
    FunctionCall    go to state 15
    Arithmetic      go to state 16
    Comparison      go to state 17
    RecordCreation  go to state 18
    ArrayCreation   go to state 19


State 61

   22 exp: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 97
    LValue          go to state 14
    FunctionCall    go to state 15
    Arithmetic      go to state 16
    Comparison      go to state 17
    RecordCreation  go to state 18
    ArrayCreation   go to state 19


State 62

   24 exp: LET DeclarationSequence IN . exp END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 98
    LValue          go to state 14
    FunctionCall    go to state 15
    Arithmetic      go to state 16
    Comparison      go to state 17
    RecordCreation  go to state 18
    ArrayCreation   go to state 19


State 63

   47 FunctionDeclaration: FUNCTION . ID LPAREN TypeFields RPAREN EQ exp
   48                    | FUNCTION . ID LPAREN TypeFields RPAREN COLON ID EQ exp

    ID  shift, and go to state 99


State 64

   45 VarDeclaration: VAR . ID ASSIGN exp
   46               | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 100


State 65

   36 TypeDeclaration: TYPE . ID EQ OtherType

    ID  shift, and go to state 101


State 66

   28 DeclarationSequence: DeclarationSequence Declaration .

    $default  reduce using rule 28 (DeclarationSequence)


State 67

   29 Declaration: TypeDeclarations .
   33 TypeDeclarations: TypeDeclarations . TypeDeclaration

    TYPE  shift, and go to state 65

    TYPE      [reduce using rule 29 (Declaration)]
    $default  reduce using rule 29 (Declaration)

    TypeDeclaration  go to state 102


State 68

   31 Declaration: FunctionDeclarations .
   35 FunctionDeclarations: FunctionDeclarations . FunctionDeclaration

    FUNCTION  shift, and go to state 63

    FUNCTION  [reduce using rule 31 (Declaration)]
    $default  reduce using rule 31 (Declaration)

    FunctionDeclaration  go to state 103


State 69

   32 TypeDeclarations: TypeDeclaration .

    $default  reduce using rule 32 (TypeDeclarations)


State 70

   30 Declaration: VarDeclaration .

    $default  reduce using rule 30 (Declaration)


State 71

   34 FunctionDeclarations: FunctionDeclaration .

    $default  reduce using rule 34 (FunctionDeclarations)


State 72

    6 exp: exp . exps
   14    | exp . AND exp
   15    | exp . OR exp
   25 exps: SEMICOLON exp .
   57 Arithmetic: exp . PLUS exp
   58           | exp . MINUS exp
   59           | exp . TIMES exp
   60           | exp . DIVIDE exp
   61 Comparison: exp . EQ exp
   62           | exp . NEQ exp
   63           | exp . LT exp
   64           | exp . LE exp
   65           | exp . GT exp
   66           | exp . GE exp

    PLUS    shift, and go to state 35
    MINUS   shift, and go to state 36
    TIMES   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    AND     shift, and go to state 45
    OR      shift, and go to state 46

    $default  reduce using rule 25 (exps)

    exps  go to state 47


State 73

    6 exp: exp . exps
   14    | exp . AND exp
   15    | exp . OR exp
   57 Arithmetic: exp . PLUS exp
   57           | exp PLUS exp .
   58           | exp . MINUS exp
   59           | exp . TIMES exp
   60           | exp . DIVIDE exp
   61 Comparison: exp . EQ exp
   62           | exp . NEQ exp
   63           | exp . LT exp
   64           | exp . LE exp
   65           | exp . GT exp
   66           | exp . GE exp

    TIMES   shift, and go to state 37
    DIVIDE  shift, and go to state 38

    $default  reduce using rule 57 (Arithmetic)

    exps  go to state 47


State 74

    6 exp: exp . exps
   14    | exp . AND exp
   15    | exp . OR exp
   57 Arithmetic: exp . PLUS exp
   58           | exp . MINUS exp
   58           | exp MINUS exp .
   59           | exp . TIMES exp
   60           | exp . DIVIDE exp
   61 Comparison: exp . EQ exp
   62           | exp . NEQ exp
   63           | exp . LT exp
   64           | exp . LE exp
   65           | exp . GT exp
   66           | exp . GE exp

    TIMES   shift, and go to state 37
    DIVIDE  shift, and go to state 38

    $default  reduce using rule 58 (Arithmetic)

    exps  go to state 47


State 75

    6 exp: exp . exps
   14    | exp . AND exp
   15    | exp . OR exp
   57 Arithmetic: exp . PLUS exp
   58           | exp . MINUS exp
   59           | exp . TIMES exp
   59           | exp TIMES exp .
   60           | exp . DIVIDE exp
   61 Comparison: exp . EQ exp
   62           | exp . NEQ exp
   63           | exp . LT exp
   64           | exp . LE exp
   65           | exp . GT exp
   66           | exp . GE exp

    $default  reduce using rule 59 (Arithmetic)

    exps  go to state 47


State 76

    6 exp: exp . exps
   14    | exp . AND exp
   15    | exp . OR exp
   57 Arithmetic: exp . PLUS exp
   58           | exp . MINUS exp
   59           | exp . TIMES exp
   60           | exp . DIVIDE exp
   60           | exp DIVIDE exp .
   61 Comparison: exp . EQ exp
   62           | exp . NEQ exp
   63           | exp . LT exp
   64           | exp . LE exp
   65           | exp . GT exp
   66           | exp . GE exp

    $default  reduce using rule 60 (Arithmetic)

    exps  go to state 47


State 77

    6 exp: exp . exps
   14    | exp . AND exp
   15    | exp . OR exp
   57 Arithmetic: exp . PLUS exp
   58           | exp . MINUS exp
   59           | exp . TIMES exp
   60           | exp . DIVIDE exp
   61 Comparison: exp . EQ exp
   61           | exp EQ exp .
   62           | exp . NEQ exp
   63           | exp . LT exp
   64           | exp . LE exp
   65           | exp . GT exp
   66           | exp . GE exp

    PLUS    shift, and go to state 35
    MINUS   shift, and go to state 36
    TIMES   shift, and go to state 37
    DIVIDE  shift, and go to state 38

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 61 (Comparison)

    exps  go to state 47


State 78

    6 exp: exp . exps
   14    | exp . AND exp
   15    | exp . OR exp
   57 Arithmetic: exp . PLUS exp
   58           | exp . MINUS exp
   59           | exp . TIMES exp
   60           | exp . DIVIDE exp
   61 Comparison: exp . EQ exp
   62           | exp . NEQ exp
   62           | exp NEQ exp .
   63           | exp . LT exp
   64           | exp . LE exp
   65           | exp . GT exp
   66           | exp . GE exp

    PLUS    shift, and go to state 35
    MINUS   shift, and go to state 36
    TIMES   shift, and go to state 37
    DIVIDE  shift, and go to state 38

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 62 (Comparison)

    exps  go to state 47


State 79

    6 exp: exp . exps
   14    | exp . AND exp
   15    | exp . OR exp
   57 Arithmetic: exp . PLUS exp
   58           | exp . MINUS exp
   59           | exp . TIMES exp
   60           | exp . DIVIDE exp
   61 Comparison: exp . EQ exp
   62           | exp . NEQ exp
   63           | exp . LT exp
   63           | exp LT exp .
   64           | exp . LE exp
   65           | exp . GT exp
   66           | exp . GE exp

    PLUS    shift, and go to state 35
    MINUS   shift, and go to state 36
    TIMES   shift, and go to state 37
    DIVIDE  shift, and go to state 38

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 63 (Comparison)

    exps  go to state 47


State 80

    6 exp: exp . exps
   14    | exp . AND exp
   15    | exp . OR exp
   57 Arithmetic: exp . PLUS exp
   58           | exp . MINUS exp
   59           | exp . TIMES exp
   60           | exp . DIVIDE exp
   61 Comparison: exp . EQ exp
   62           | exp . NEQ exp
   63           | exp . LT exp
   64           | exp . LE exp
   64           | exp LE exp .
   65           | exp . GT exp
   66           | exp . GE exp

    PLUS    shift, and go to state 35
    MINUS   shift, and go to state 36
    TIMES   shift, and go to state 37
    DIVIDE  shift, and go to state 38

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 64 (Comparison)

    exps  go to state 47


State 81

    6 exp: exp . exps
   14    | exp . AND exp
   15    | exp . OR exp
   57 Arithmetic: exp . PLUS exp
   58           | exp . MINUS exp
   59           | exp . TIMES exp
   60           | exp . DIVIDE exp
   61 Comparison: exp . EQ exp
   62           | exp . NEQ exp
   63           | exp . LT exp
   64           | exp . LE exp
   65           | exp . GT exp
   65           | exp GT exp .
   66           | exp . GE exp

    PLUS    shift, and go to state 35
    MINUS   shift, and go to state 36
    TIMES   shift, and go to state 37
    DIVIDE  shift, and go to state 38

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 65 (Comparison)

    exps  go to state 47


State 82

    6 exp: exp . exps
   14    | exp . AND exp
   15    | exp . OR exp
   57 Arithmetic: exp . PLUS exp
   58           | exp . MINUS exp
   59           | exp . TIMES exp
   60           | exp . DIVIDE exp
   61 Comparison: exp . EQ exp
   62           | exp . NEQ exp
   63           | exp . LT exp
   64           | exp . LE exp
   65           | exp . GT exp
   66           | exp . GE exp
   66           | exp GE exp .

    PLUS    shift, and go to state 35
    MINUS   shift, and go to state 36
    TIMES   shift, and go to state 37
    DIVIDE  shift, and go to state 38

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 66 (Comparison)

    exps  go to state 47


State 83

    6 exp: exp . exps
   14    | exp . AND exp
   14    | exp AND exp .
   15    | exp . OR exp
   57 Arithmetic: exp . PLUS exp
   58           | exp . MINUS exp
   59           | exp . TIMES exp
   60           | exp . DIVIDE exp
   61 Comparison: exp . EQ exp
   62           | exp . NEQ exp
   63           | exp . LT exp
   64           | exp . LE exp
   65           | exp . GT exp
   66           | exp . GE exp

    PLUS    shift, and go to state 35
    MINUS   shift, and go to state 36
    TIMES   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44

    $default  reduce using rule 14 (exp)

    exps  go to state 47


State 84

    6 exp: exp . exps
   14    | exp . AND exp
   15    | exp . OR exp
   15    | exp OR exp .
   57 Arithmetic: exp . PLUS exp
   58           | exp . MINUS exp
   59           | exp . TIMES exp
   60           | exp . DIVIDE exp
   61 Comparison: exp . EQ exp
   62           | exp . NEQ exp
   63           | exp . LT exp
   64           | exp . LE exp
   65           | exp . GT exp
   66           | exp . GE exp

    PLUS    shift, and go to state 35
    MINUS   shift, and go to state 36
    TIMES   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    AND     shift, and go to state 45

    $default  reduce using rule 15 (exp)

    exps  go to state 47


State 85

   26 exps: exps SEMICOLON . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 104
    LValue          go to state 14
    FunctionCall    go to state 15
    Arithmetic      go to state 16
    Comparison      go to state 17
    RecordCreation  go to state 18
    ArrayCreation   go to state 19


State 86

    6 exp: exp . exps
   14    | exp . AND exp
   15    | exp . OR exp
   18    | LValue ASSIGN exp .
   57 Arithmetic: exp . PLUS exp
   58           | exp . MINUS exp
   59           | exp . TIMES exp
   60           | exp . DIVIDE exp
   61 Comparison: exp . EQ exp
   62           | exp . NEQ exp
   63           | exp . LT exp
   64           | exp . LE exp
   65           | exp . GT exp
   66           | exp . GE exp

    PLUS    shift, and go to state 35
    MINUS   shift, and go to state 36
    TIMES   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    AND     shift, and go to state 45
    OR      shift, and go to state 46

    $default  reduce using rule 18 (exp)

    exps  go to state 47


State 87

   56 expList: expList COMMA . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 105
    LValue          go to state 14
    FunctionCall    go to state 15
    Arithmetic      go to state 16
    Comparison      go to state 17
    RecordCreation  go to state 18
    ArrayCreation   go to state 19


State 88

   54 FunctionCall: ID LPAREN expList RPAREN .

    $default  reduce using rule 54 (FunctionCall)


State 89

   52 LValue_extension: LBRACK exp RBRACK . LValue_extension
   72 ArrayCreation: ID LBRACK exp RBRACK . OF exp

    LBRACK  shift, and go to state 93
    DOT     shift, and go to state 23
    OF      shift, and go to state 106

    $default  reduce using rule 50 (LValue_extension)

    LValue_extension  go to state 107


State 90

   71 FieldAssignment: ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 108
    LValue          go to state 14
    FunctionCall    go to state 15
    Arithmetic      go to state 16
    Comparison      go to state 17
    RecordCreation  go to state 18
    ArrayCreation   go to state 19


State 91

   70 FieldAssignmentList: FieldAssignmentList COMMA . FieldAssignment

    ID  shift, and go to state 53

    FieldAssignment  go to state 109


State 92

   68 RecordCreation: ID LBRACE FieldAssignmentList RBRACE .

    $default  reduce using rule 68 (RecordCreation)


State 93

   52 LValue_extension: LBRACK . exp RBRACK LValue_extension

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 110
    LValue          go to state 14
    FunctionCall    go to state 15
    Arithmetic      go to state 16
    Comparison      go to state 17
    RecordCreation  go to state 18
    ArrayCreation   go to state 19


State 94

   51 LValue_extension: DOT ID LValue_extension .

    $default  reduce using rule 51 (LValue_extension)


State 95

    6 exp: exp . exps
   14    | exp . AND exp
   15    | exp . OR exp
   19    | IF exp THEN exp . ELSE exp
   20    | IF exp THEN exp .
   57 Arithmetic: exp . PLUS exp
   58           | exp . MINUS exp
   59           | exp . TIMES exp
   60           | exp . DIVIDE exp
   61 Comparison: exp . EQ exp
   62           | exp . NEQ exp
   63           | exp . LT exp
   64           | exp . LE exp
   65           | exp . GT exp
   66           | exp . GE exp

    SEMICOLON  shift, and go to state 34
    PLUS       shift, and go to state 35
    MINUS      shift, and go to state 36
    TIMES      shift, and go to state 37
    DIVIDE     shift, and go to state 38
    EQ         shift, and go to state 39
    NEQ        shift, and go to state 40
    LT         shift, and go to state 41
    LE         shift, and go to state 42
    GT         shift, and go to state 43
    GE         shift, and go to state 44
    AND        shift, and go to state 45
    OR         shift, and go to state 46
    ELSE       shift, and go to state 111

    $default  reduce using rule 20 (exp)

    exps  go to state 47


State 96

    6 exp: exp . exps
   14    | exp . AND exp
   15    | exp . OR exp
   21    | WHILE exp DO exp .
   57 Arithmetic: exp . PLUS exp
   58           | exp . MINUS exp
   59           | exp . TIMES exp
   60           | exp . DIVIDE exp
   61 Comparison: exp . EQ exp
   62           | exp . NEQ exp
   63           | exp . LT exp
   64           | exp . LE exp
   65           | exp . GT exp
   66           | exp . GE exp

    SEMICOLON  shift, and go to state 34
    PLUS       shift, and go to state 35
    MINUS      shift, and go to state 36
    TIMES      shift, and go to state 37
    DIVIDE     shift, and go to state 38
    EQ         shift, and go to state 39
    NEQ        shift, and go to state 40
    LT         shift, and go to state 41
    LE         shift, and go to state 42
    GT         shift, and go to state 43
    GE         shift, and go to state 44
    AND        shift, and go to state 45
    OR         shift, and go to state 46

    $default  reduce using rule 21 (exp)

    exps  go to state 47


State 97

    6 exp: exp . exps
   14    | exp . AND exp
   15    | exp . OR exp
   22    | FOR ID ASSIGN exp . TO exp DO exp
   57 Arithmetic: exp . PLUS exp
   58           | exp . MINUS exp
   59           | exp . TIMES exp
   60           | exp . DIVIDE exp
   61 Comparison: exp . EQ exp
   62           | exp . NEQ exp
   63           | exp . LT exp
   64           | exp . LE exp
   65           | exp . GT exp
   66           | exp . GE exp

    SEMICOLON  shift, and go to state 34
    PLUS       shift, and go to state 35
    MINUS      shift, and go to state 36
    TIMES      shift, and go to state 37
    DIVIDE     shift, and go to state 38
    EQ         shift, and go to state 39
    NEQ        shift, and go to state 40
    LT         shift, and go to state 41
    LE         shift, and go to state 42
    GT         shift, and go to state 43
    GE         shift, and go to state 44
    AND        shift, and go to state 45
    OR         shift, and go to state 46
    TO         shift, and go to state 112

    exps  go to state 47


State 98

    6 exp: exp . exps
   14    | exp . AND exp
   15    | exp . OR exp
   24    | LET DeclarationSequence IN exp . END
   57 Arithmetic: exp . PLUS exp
   58           | exp . MINUS exp
   59           | exp . TIMES exp
   60           | exp . DIVIDE exp
   61 Comparison: exp . EQ exp
   62           | exp . NEQ exp
   63           | exp . LT exp
   64           | exp . LE exp
   65           | exp . GT exp
   66           | exp . GE exp

    SEMICOLON  shift, and go to state 34
    PLUS       shift, and go to state 35
    MINUS      shift, and go to state 36
    TIMES      shift, and go to state 37
    DIVIDE     shift, and go to state 38
    EQ         shift, and go to state 39
    NEQ        shift, and go to state 40
    LT         shift, and go to state 41
    LE         shift, and go to state 42
    GT         shift, and go to state 43
    GE         shift, and go to state 44
    AND        shift, and go to state 45
    OR         shift, and go to state 46
    END        shift, and go to state 113

    exps  go to state 47


State 99

   47 FunctionDeclaration: FUNCTION ID . LPAREN TypeFields RPAREN EQ exp
   48                    | FUNCTION ID . LPAREN TypeFields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 114


State 100

   45 VarDeclaration: VAR ID . ASSIGN exp
   46               | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 115
    ASSIGN  shift, and go to state 116


State 101

   36 TypeDeclaration: TYPE ID . EQ OtherType

    EQ  shift, and go to state 117


State 102

   33 TypeDeclarations: TypeDeclarations TypeDeclaration .

    $default  reduce using rule 33 (TypeDeclarations)


State 103

   35 FunctionDeclarations: FunctionDeclarations FunctionDeclaration .

    $default  reduce using rule 35 (FunctionDeclarations)


State 104

    6 exp: exp . exps
   14    | exp . AND exp
   15    | exp . OR exp
   26 exps: exps SEMICOLON exp .
   57 Arithmetic: exp . PLUS exp
   58           | exp . MINUS exp
   59           | exp . TIMES exp
   60           | exp . DIVIDE exp
   61 Comparison: exp . EQ exp
   62           | exp . NEQ exp
   63           | exp . LT exp
   64           | exp . LE exp
   65           | exp . GT exp
   66           | exp . GE exp

    PLUS    shift, and go to state 35
    MINUS   shift, and go to state 36
    TIMES   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    AND     shift, and go to state 45
    OR      shift, and go to state 46

    $default  reduce using rule 26 (exps)

    exps  go to state 47


State 105

    6 exp: exp . exps
   14    | exp . AND exp
   15    | exp . OR exp
   56 expList: expList COMMA exp .
   57 Arithmetic: exp . PLUS exp
   58           | exp . MINUS exp
   59           | exp . TIMES exp
   60           | exp . DIVIDE exp
   61 Comparison: exp . EQ exp
   62           | exp . NEQ exp
   63           | exp . LT exp
   64           | exp . LE exp
   65           | exp . GT exp
   66           | exp . GE exp

    SEMICOLON  shift, and go to state 34
    PLUS       shift, and go to state 35
    MINUS      shift, and go to state 36
    TIMES      shift, and go to state 37
    DIVIDE     shift, and go to state 38
    EQ         shift, and go to state 39
    NEQ        shift, and go to state 40
    LT         shift, and go to state 41
    LE         shift, and go to state 42
    GT         shift, and go to state 43
    GE         shift, and go to state 44
    AND        shift, and go to state 45
    OR         shift, and go to state 46

    $default  reduce using rule 56 (expList)

    exps  go to state 47


State 106

   72 ArrayCreation: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 118
    LValue          go to state 14
    FunctionCall    go to state 15
    Arithmetic      go to state 16
    Comparison      go to state 17
    RecordCreation  go to state 18
    ArrayCreation   go to state 19


State 107

   52 LValue_extension: LBRACK exp RBRACK LValue_extension .

    $default  reduce using rule 52 (LValue_extension)


State 108

    6 exp: exp . exps
   14    | exp . AND exp
   15    | exp . OR exp
   57 Arithmetic: exp . PLUS exp
   58           | exp . MINUS exp
   59           | exp . TIMES exp
   60           | exp . DIVIDE exp
   61 Comparison: exp . EQ exp
   62           | exp . NEQ exp
   63           | exp . LT exp
   64           | exp . LE exp
   65           | exp . GT exp
   66           | exp . GE exp
   71 FieldAssignment: ID EQ exp .

    SEMICOLON  shift, and go to state 34
    PLUS       shift, and go to state 35
    MINUS      shift, and go to state 36
    TIMES      shift, and go to state 37
    DIVIDE     shift, and go to state 38
    EQ         shift, and go to state 39
    NEQ        shift, and go to state 40
    LT         shift, and go to state 41
    LE         shift, and go to state 42
    GT         shift, and go to state 43
    GE         shift, and go to state 44
    AND        shift, and go to state 45
    OR         shift, and go to state 46

    $default  reduce using rule 71 (FieldAssignment)

    exps  go to state 47


State 109

   70 FieldAssignmentList: FieldAssignmentList COMMA FieldAssignment .

    $default  reduce using rule 70 (FieldAssignmentList)


State 110

    6 exp: exp . exps
   14    | exp . AND exp
   15    | exp . OR exp
   52 LValue_extension: LBRACK exp . RBRACK LValue_extension
   57 Arithmetic: exp . PLUS exp
   58           | exp . MINUS exp
   59           | exp . TIMES exp
   60           | exp . DIVIDE exp
   61 Comparison: exp . EQ exp
   62           | exp . NEQ exp
   63           | exp . LT exp
   64           | exp . LE exp
   65           | exp . GT exp
   66           | exp . GE exp

    SEMICOLON  shift, and go to state 34
    RBRACK     shift, and go to state 119
    PLUS       shift, and go to state 35
    MINUS      shift, and go to state 36
    TIMES      shift, and go to state 37
    DIVIDE     shift, and go to state 38
    EQ         shift, and go to state 39
    NEQ        shift, and go to state 40
    LT         shift, and go to state 41
    LE         shift, and go to state 42
    GT         shift, and go to state 43
    GE         shift, and go to state 44
    AND        shift, and go to state 45
    OR         shift, and go to state 46

    exps  go to state 47


State 111

   19 exp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 120
    LValue          go to state 14
    FunctionCall    go to state 15
    Arithmetic      go to state 16
    Comparison      go to state 17
    RecordCreation  go to state 18
    ArrayCreation   go to state 19


State 112

   22 exp: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 121
    LValue          go to state 14
    FunctionCall    go to state 15
    Arithmetic      go to state 16
    Comparison      go to state 17
    RecordCreation  go to state 18
    ArrayCreation   go to state 19


State 113

   24 exp: LET DeclarationSequence IN exp END .

    $default  reduce using rule 24 (exp)


State 114

   47 FunctionDeclaration: FUNCTION ID LPAREN . TypeFields RPAREN EQ exp
   48                    | FUNCTION ID LPAREN . TypeFields RPAREN COLON ID EQ exp

    ID  shift, and go to state 122

    $default  reduce using rule 40 (TypeFields)

    TypeFields  go to state 123
    TypeKV      go to state 124


State 115

   46 VarDeclaration: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 125


State 116

   45 VarDeclaration: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 126
    LValue          go to state 14
    FunctionCall    go to state 15
    Arithmetic      go to state 16
    Comparison      go to state 17
    RecordCreation  go to state 18
    ArrayCreation   go to state 19


State 117

   36 TypeDeclaration: TYPE ID EQ . OtherType

    ID      shift, and go to state 127
    LBRACE  shift, and go to state 128
    ARRAY   shift, and go to state 129

    OtherType  go to state 130


State 118

    6 exp: exp . exps
   14    | exp . AND exp
   15    | exp . OR exp
   57 Arithmetic: exp . PLUS exp
   58           | exp . MINUS exp
   59           | exp . TIMES exp
   60           | exp . DIVIDE exp
   61 Comparison: exp . EQ exp
   62           | exp . NEQ exp
   63           | exp . LT exp
   64           | exp . LE exp
   65           | exp . GT exp
   66           | exp . GE exp
   72 ArrayCreation: ID LBRACK exp RBRACK OF exp .

    SEMICOLON  shift, and go to state 34
    PLUS       shift, and go to state 35
    MINUS      shift, and go to state 36
    TIMES      shift, and go to state 37
    DIVIDE     shift, and go to state 38
    EQ         shift, and go to state 39
    NEQ        shift, and go to state 40
    LT         shift, and go to state 41
    LE         shift, and go to state 42
    GT         shift, and go to state 43
    GE         shift, and go to state 44
    AND        shift, and go to state 45
    OR         shift, and go to state 46

    $default  reduce using rule 72 (ArrayCreation)

    exps  go to state 47


State 119

   52 LValue_extension: LBRACK exp RBRACK . LValue_extension

    LBRACK  shift, and go to state 93
    DOT     shift, and go to state 23

    $default  reduce using rule 50 (LValue_extension)

    LValue_extension  go to state 107


State 120

    6 exp: exp . exps
   14    | exp . AND exp
   15    | exp . OR exp
   19    | IF exp THEN exp ELSE exp .
   57 Arithmetic: exp . PLUS exp
   58           | exp . MINUS exp
   59           | exp . TIMES exp
   60           | exp . DIVIDE exp
   61 Comparison: exp . EQ exp
   62           | exp . NEQ exp
   63           | exp . LT exp
   64           | exp . LE exp
   65           | exp . GT exp
   66           | exp . GE exp

    SEMICOLON  shift, and go to state 34
    PLUS       shift, and go to state 35
    MINUS      shift, and go to state 36
    TIMES      shift, and go to state 37
    DIVIDE     shift, and go to state 38
    EQ         shift, and go to state 39
    NEQ        shift, and go to state 40
    LT         shift, and go to state 41
    LE         shift, and go to state 42
    GT         shift, and go to state 43
    GE         shift, and go to state 44
    AND        shift, and go to state 45
    OR         shift, and go to state 46

    $default  reduce using rule 19 (exp)

    exps  go to state 47


State 121

    6 exp: exp . exps
   14    | exp . AND exp
   15    | exp . OR exp
   22    | FOR ID ASSIGN exp TO exp . DO exp
   57 Arithmetic: exp . PLUS exp
   58           | exp . MINUS exp
   59           | exp . TIMES exp
   60           | exp . DIVIDE exp
   61 Comparison: exp . EQ exp
   62           | exp . NEQ exp
   63           | exp . LT exp
   64           | exp . LE exp
   65           | exp . GT exp
   66           | exp . GE exp

    SEMICOLON  shift, and go to state 34
    PLUS       shift, and go to state 35
    MINUS      shift, and go to state 36
    TIMES      shift, and go to state 37
    DIVIDE     shift, and go to state 38
    EQ         shift, and go to state 39
    NEQ        shift, and go to state 40
    LT         shift, and go to state 41
    LE         shift, and go to state 42
    GT         shift, and go to state 43
    GE         shift, and go to state 44
    AND        shift, and go to state 45
    OR         shift, and go to state 46
    DO         shift, and go to state 131

    exps  go to state 47


State 122

   42 TypeKV: ID . COLON ID

    COLON  shift, and go to state 132


State 123

   47 FunctionDeclaration: FUNCTION ID LPAREN TypeFields . RPAREN EQ exp
   48                    | FUNCTION ID LPAREN TypeFields . RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 133


State 124

   41 TypeFields: TypeKV . TypeKVList

    $default  reduce using rule 43 (TypeKVList)

    TypeKVList  go to state 134


State 125

   46 VarDeclaration: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 135


State 126

    6 exp: exp . exps
   14    | exp . AND exp
   15    | exp . OR exp
   45 VarDeclaration: VAR ID ASSIGN exp .
   57 Arithmetic: exp . PLUS exp
   58           | exp . MINUS exp
   59           | exp . TIMES exp
   60           | exp . DIVIDE exp
   61 Comparison: exp . EQ exp
   62           | exp . NEQ exp
   63           | exp . LT exp
   64           | exp . LE exp
   65           | exp . GT exp
   66           | exp . GE exp

    SEMICOLON  shift, and go to state 34
    PLUS       shift, and go to state 35
    MINUS      shift, and go to state 36
    TIMES      shift, and go to state 37
    DIVIDE     shift, and go to state 38
    EQ         shift, and go to state 39
    NEQ        shift, and go to state 40
    LT         shift, and go to state 41
    LE         shift, and go to state 42
    GT         shift, and go to state 43
    GE         shift, and go to state 44
    AND        shift, and go to state 45
    OR         shift, and go to state 46

    $default  reduce using rule 45 (VarDeclaration)

    exps  go to state 47


State 127

   37 OtherType: ID .

    $default  reduce using rule 37 (OtherType)


State 128

   38 OtherType: LBRACE . TypeFields RBRACE

    ID  shift, and go to state 122

    $default  reduce using rule 40 (TypeFields)

    TypeFields  go to state 136
    TypeKV      go to state 124


State 129

   39 OtherType: ARRAY . OF ID

    OF  shift, and go to state 137


State 130

   36 TypeDeclaration: TYPE ID EQ OtherType .

    $default  reduce using rule 36 (TypeDeclaration)


State 131

   22 exp: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 138
    LValue          go to state 14
    FunctionCall    go to state 15
    Arithmetic      go to state 16
    Comparison      go to state 17
    RecordCreation  go to state 18
    ArrayCreation   go to state 19


State 132

   42 TypeKV: ID COLON . ID

    ID  shift, and go to state 139


State 133

   47 FunctionDeclaration: FUNCTION ID LPAREN TypeFields RPAREN . EQ exp
   48                    | FUNCTION ID LPAREN TypeFields RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 140
    EQ     shift, and go to state 141


State 134

   41 TypeFields: TypeKV TypeKVList .
   44 TypeKVList: TypeKVList . COMMA TypeKV

    COMMA  shift, and go to state 142

    $default  reduce using rule 41 (TypeFields)


State 135

   46 VarDeclaration: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 143
    LValue          go to state 14
    FunctionCall    go to state 15
    Arithmetic      go to state 16
    Comparison      go to state 17
    RecordCreation  go to state 18
    ArrayCreation   go to state 19


State 136

   38 OtherType: LBRACE TypeFields . RBRACE

    RBRACE  shift, and go to state 144


State 137

   39 OtherType: ARRAY OF . ID

    ID  shift, and go to state 145


State 138

    6 exp: exp . exps
   14    | exp . AND exp
   15    | exp . OR exp
   22    | FOR ID ASSIGN exp TO exp DO exp .
   57 Arithmetic: exp . PLUS exp
   58           | exp . MINUS exp
   59           | exp . TIMES exp
   60           | exp . DIVIDE exp
   61 Comparison: exp . EQ exp
   62           | exp . NEQ exp
   63           | exp . LT exp
   64           | exp . LE exp
   65           | exp . GT exp
   66           | exp . GE exp

    SEMICOLON  shift, and go to state 34
    PLUS       shift, and go to state 35
    MINUS      shift, and go to state 36
    TIMES      shift, and go to state 37
    DIVIDE     shift, and go to state 38
    EQ         shift, and go to state 39
    NEQ        shift, and go to state 40
    LT         shift, and go to state 41
    LE         shift, and go to state 42
    GT         shift, and go to state 43
    GE         shift, and go to state 44
    AND        shift, and go to state 45
    OR         shift, and go to state 46

    $default  reduce using rule 22 (exp)

    exps  go to state 47


State 139

   42 TypeKV: ID COLON ID .

    $default  reduce using rule 42 (TypeKV)


State 140

   48 FunctionDeclaration: FUNCTION ID LPAREN TypeFields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 146


State 141

   47 FunctionDeclaration: FUNCTION ID LPAREN TypeFields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 147
    LValue          go to state 14
    FunctionCall    go to state 15
    Arithmetic      go to state 16
    Comparison      go to state 17
    RecordCreation  go to state 18
    ArrayCreation   go to state 19


State 142

   44 TypeKVList: TypeKVList COMMA . TypeKV

    ID  shift, and go to state 122

    TypeKV  go to state 148


State 143

    6 exp: exp . exps
   14    | exp . AND exp
   15    | exp . OR exp
   46 VarDeclaration: VAR ID COLON ID ASSIGN exp .
   57 Arithmetic: exp . PLUS exp
   58           | exp . MINUS exp
   59           | exp . TIMES exp
   60           | exp . DIVIDE exp
   61 Comparison: exp . EQ exp
   62           | exp . NEQ exp
   63           | exp . LT exp
   64           | exp . LE exp
   65           | exp . GT exp
   66           | exp . GE exp

    SEMICOLON  shift, and go to state 34
    PLUS       shift, and go to state 35
    MINUS      shift, and go to state 36
    TIMES      shift, and go to state 37
    DIVIDE     shift, and go to state 38
    EQ         shift, and go to state 39
    NEQ        shift, and go to state 40
    LT         shift, and go to state 41
    LE         shift, and go to state 42
    GT         shift, and go to state 43
    GE         shift, and go to state 44
    AND        shift, and go to state 45
    OR         shift, and go to state 46

    $default  reduce using rule 46 (VarDeclaration)

    exps  go to state 47


State 144

   38 OtherType: LBRACE TypeFields RBRACE .

    $default  reduce using rule 38 (OtherType)


State 145

   39 OtherType: ARRAY OF ID .

    $default  reduce using rule 39 (OtherType)


State 146

   48 FunctionDeclaration: FUNCTION ID LPAREN TypeFields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 149


State 147

    6 exp: exp . exps
   14    | exp . AND exp
   15    | exp . OR exp
   47 FunctionDeclaration: FUNCTION ID LPAREN TypeFields RPAREN EQ exp .
   57 Arithmetic: exp . PLUS exp
   58           | exp . MINUS exp
   59           | exp . TIMES exp
   60           | exp . DIVIDE exp
   61 Comparison: exp . EQ exp
   62           | exp . NEQ exp
   63           | exp . LT exp
   64           | exp . LE exp
   65           | exp . GT exp
   66           | exp . GE exp

    SEMICOLON  shift, and go to state 34
    PLUS       shift, and go to state 35
    MINUS      shift, and go to state 36
    TIMES      shift, and go to state 37
    DIVIDE     shift, and go to state 38
    EQ         shift, and go to state 39
    NEQ        shift, and go to state 40
    LT         shift, and go to state 41
    LE         shift, and go to state 42
    GT         shift, and go to state 43
    GE         shift, and go to state 44
    AND        shift, and go to state 45
    OR         shift, and go to state 46

    $default  reduce using rule 47 (FunctionDeclaration)

    exps  go to state 47


State 148

   44 TypeKVList: TypeKVList COMMA TypeKV .

    $default  reduce using rule 44 (TypeKVList)


State 149

   48 FunctionDeclaration: FUNCTION ID LPAREN TypeFields RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 150
    LValue          go to state 14
    FunctionCall    go to state 15
    Arithmetic      go to state 16
    Comparison      go to state 17
    RecordCreation  go to state 18
    ArrayCreation   go to state 19


State 150

    6 exp: exp . exps
   14    | exp . AND exp
   15    | exp . OR exp
   48 FunctionDeclaration: FUNCTION ID LPAREN TypeFields RPAREN COLON ID EQ exp .
   57 Arithmetic: exp . PLUS exp
   58           | exp . MINUS exp
   59           | exp . TIMES exp
   60           | exp . DIVIDE exp
   61 Comparison: exp . EQ exp
   62           | exp . NEQ exp
   63           | exp . LT exp
   64           | exp . LE exp
   65           | exp . GT exp
   66           | exp . GE exp

    SEMICOLON  shift, and go to state 34
    PLUS       shift, and go to state 35
    MINUS      shift, and go to state 36
    TIMES      shift, and go to state 37
    DIVIDE     shift, and go to state 38
    EQ         shift, and go to state 39
    NEQ        shift, and go to state 40
    LT         shift, and go to state 41
    LE         shift, and go to state 42
    GT         shift, and go to state 43
    GE         shift, and go to state 44
    AND        shift, and go to state 45
    OR         shift, and go to state 46

    $default  reduce using rule 48 (FunctionDeclaration)

    exps  go to state 47
