/* test tydec */
type int = string
type liyeType1 = { }
type liyeType2 = { id1: type1   }
type liyeType3 = { id2 : type2 , id3: type3}
type liyeType4 = array of int

type intlist = {hd: int, tl: intlist}
type tree = {key: int, children: treelist}
type treelist = {hd: tree, tl: treelist}


/* test vardec */
var id1 := "abc"
var id1:string := "cly"


/* test fundec */
function fun1() = "abc"
function fun2(id1:type1) = "123"
function fun3(id2:type2, id3:type3) = "qwe"
function fun1():int = "abc"
function fun2(id1:type1) : string  = "123"
function fun3(id2:type2, id3:type3): string = "qwe"


/* test nil */
nil
var id1 := nil

/* test Sequencing */
(nil;nil;nil)

/* test negation */
-10

fun(nil, "123")

"abc" + 123

"abc" = "qwe"

1 & 2
1 | 0
